/*!
 ***************************************************************************************
 *
 *  Copyright ? 2017-2018 yifneg. All Rights Reserved.
 *
 * \file      PlayPcm.H
 * \author    yifeng
 * \version   1.0
 * \date      2023年7月10日
 * \brief     播放PCM
 *
 *--------------------------------------------------------------------------------------
 * \attention
 *
 *
 ***************************************************************************************
 */

/*****************************************************************************************
 change history: 
    1.date  : 2023年7月10日
      author: yifeng
      change: create file

*****************************************************************************************/


/*=======================================================================================
下面两条指令是本头文件条件编译的预处理指令，用于防止本头文件被其他文件重复引用。
=======================================================================================*/
#ifndef __PlayPcm_H__
#define __PlayPcm_H__


/*========================================================================================
                                 本源程序包括的头文件                                     
建议：包含本项目的文件使用 #include "文件名.扩展名"，                                   
      包含系统库的文件使用 #include <文件名.扩展名> 。                                    
========================================================================================*/
#include "Main.h"


/*=======================================================================================
下面这三条指令是用于区分编译系统为 C++ 或 C 的预处理指令。                               
"__cplusplus" 为 C++ 预处理器名字，这三条指令表明接在其下面的那些指令为 C 程序特征.      
=======================================================================================*/
#ifdef __cplusplus
extern "C" {
#endif


/*=======================================================================================
                               系统运行的各类字符化常数定义                             
=======================================================================================*/
/*---------------------------------------------------------------------------------------
为了做到较好的软件可移植性，推荐用户在编程时使用下面定义的数据类型大小
---------------------------------------------------------------------------------------*/
/* 播放的文件 */
#define IMP_AUDIO_PLAY_FILE "play_file.pcm"

#define P2P_FILE   "p2p_webrtc"

/* 分配缓存大小 */
#define AEC_SAMPLE_RATE 16000
#define AEC_SAMPLE_TIME 10

#define IMP_AUDIO_BUF_SIZE (2 * (AEC_SAMPLE_RATE * sizeof(short) * AEC_SAMPLE_TIME / 1000))




/*---------------------------------------------------------------------------------------
的字符化常数定义：
----------------------------------------------------------------------------------------*/


/*=======================================================================================
                      各类字符化常数和硬件设计相关的输入／输出引脚定义
=======================================================================================*/
/*--------------------------------------------------------------------------------------
的输入／输出引脚定义：
--------------------------------------------------------------------------------------*/


/*======================================================================================
                             全局变量数据结构类型定义
======================================================================================*/
/*--------------------------------------------------------------------------------------
的全局数据结构类型定义 ：  
--------------------------------------------------------------------------------------*/
typedef struct
{
  unsigned char StartStop:     1;    // 开始停止标记
  unsigned char PlayNow:       1;    // 正在运行
 
  unsigned char IMPAudioInit:  1;    // 初始化标记 
}PlayPcmBits;


typedef enum
{
  EnPmOpenFile         = 0x00,    
  EnPmStart                  ,         // 开始
  EnPmPlay                   ,         // play
  EnPmStop                   ,         // 停止
  EnPmP2p                    ,
  EnPmDefault                ,
} PlayModeEnum;


typedef struct 
{
  PlayModeEnum RunMode;             // 运行模式

  unsigned short Delay;             // 延时时间
  unsigned short P2pDelay;  
}PlayPcmStru;





/*=======================================================================================
                                         全局常量声明                                    
=======================================================================================*/
/*---------------------------------------------------------------------------------------
的全局常量声明：
---------------------------------------------------------------------------------------*/


/*=======================================================================================
                                         全局变量声明                                    
=======================================================================================*/
/*---------------------------------------------------------------------------------------
的全局变量声明：
---------------------------------------------------------------------------------------*/
extern  PlayPcmBits  gbitPlay;
extern  PlayPcmStru  gstvPlay;



/*=======================================================================================
                                 源程序文件中的函数原型声明
=======================================================================================*/



/*!
 * \fn     Start_PlayPcmDeal_Monitor_Thread
 * \brief  PCM处理
 *          
 * \param  [in] void   #
 * 
 * \retval void
 */
void Start_PlayPcmDeal_Monitor_Thread(void);



/*!
 * \fn     PlayPcmInputRunMode
 * \brief  进入运行模式
 *          
 * \param  [in] PlayModeEnum          PlayMode   #
 * 
 * \retval void
 */
void PlayPcmInputRunMode(PlayModeEnum PlayMode);


/*!
 * \fn     StartP2pTaskThread
 * \brief  开始任务
 *          
 * \param  [in] void   #
 * 
 * \retval void
 */
void StartP2pTaskThread(void);


/*!
 * \fn     StopP2pTaskThread
 * \brief  停止任务
 *          
 * \param  [in] void   #
 * 
 * \retval void
 */
void StopP2pTaskThread(void);




/*=======================================================================================
下面这三条指令是用于与上面三条区分编译系统为 C++ 或 C 的预处理指令相对应。用于指定
 extern "C" 链接指示符作用域，此处的"}"与上面的"{"相对应，为链接指示符作用结束符。
=======================================================================================*/
#ifdef __cplusplus
}
#endif

#endif
/*
*****************************************************************************************
                                 本Ｃ语言源程序文件到此结束
*****************************************************************************************
*/


